package com.stepDefinitions;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.testng.Assert;
import org.testng.Reporter;

import com.elementRepository.HomePage;
import com.elementRepository.LoginPage;
import com.elementRepository.SignUpPage;
import com.utilPackage.DriverFactory;
import com.utilityClasses.FileUtility;
import com.utilityClasses.JavaScriptUtil;
import com.utilityClasses.WebDriverUtility;

import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;

public class stepDefinition2 {

	WebDriver driver = DriverFactory.getDriver();
	HomePage homePage = new HomePage(driver);
	WebDriverUtility webDriverUtility = new WebDriverUtility();
	FileUtility fileUtility = new FileUtility();
	LoginPage loginPage = new LoginPage(driver);
	SignUpPage signUpPage = new SignUpPage(driver);
	JavaScriptUtil javaScriptUtil = new JavaScriptUtil(driver);

	@When("user should be able to hover on login link")
	public void user_should_be_able_to_hover_on_login_link() throws InterruptedException {
		webDriverUtility.mouseHover(driver, homePage.getLoginLink());
		Thread.sleep(3000);
	}

	@When("user should be able to click on login button and navigate to the login page")
	public void user_should_be_able_to_click_on_login_button_and_navigate_to_the_login_page() throws Exception {
		homePage.getLoginButton().click();
		Thread.sleep(3000);
		webDriverUtility.switchToTabOnTitle(driver, fileUtility.getDataFromPropertiesFiles("loginTitle"));
		Thread.sleep(3000);
	}

	@When("user should be able to enter valid credentails and click on next button")
	public void user_should_be_able_to_enter_valid_credentails_and_click_on_next_button() throws Exception {
		loginPage.getEmailOrPhoneTextFeild().sendKeys(fileUtility.getDataFromPropertiesFiles("phno"));
		Thread.sleep(7000);
		loginPage.getNextButton().click();
		Thread.sleep(10000);
	}

	@When("user should be able to click on continue")
	public void user_should_be_able_to_click_on_continue() throws InterruptedException {
		loginPage.getContinueButton().click();
		driver.findElement(By.xpath("//div[@class='onmodal__cross']")).click();
	}

	@Then("user should be logged in")
	public void user_should_be_logged_in() {
		Assert.assertTrue(
				driver.findElement(By.xpath("//div[@class='mb-header__main__login js-menu-container loggedin']"))
						.isDisplayed());
		Reporter.log("User is logged in", true);
	}

	@When("Click on main sign up link")
	public void click_on_main_sign_up_link() throws Exception {
		javaScriptUtil.jsClick(signUpPage.getSignUpLink());
		webDriverUtility.switchToTabOnTitle(driver, fileUtility.getDataFromPropertiesFiles("loginTitle"));
		javaScriptUtil.jsClick(signUpPage.getMainSignUpLink());
	}

	@When("Enter the valid credentials")
	public void enter_the_valid_credentials() throws Exception {
		signUpPage.clickElement(signUpPage.getRadioLink());
		signUpPage.sendKeysToElement(signUpPage.getNameTextField(),
				fileUtility.getDataFromPropertiesFiles("signUpName"));
		signUpPage.sendKeysToElement(signUpPage.getEmailTextField(),
				fileUtility.getDataFromPropertiesFiles("signUpEmail"));
		signUpPage.sendKeysToElement(signUpPage.getPasswordTextField(),
				fileUtility.getDataFromPropertiesFiles("signUpPassword"));
		signUpPage.sendKeysToElement(signUpPage.getMobileTextField(),
				fileUtility.getDataFromPropertiesFiles("signUpPhno"));
		signUpPage.clickElement(signUpPage.getCheckboxField());
		signUpPage.clickElement(signUpPage.getCaptchaField());
		Thread.sleep(3000);
	}

	@When("Click on sign up button")
	public void click_on_sign_up_button() {
		signUpPage.clickElement(signUpPage.getSignUpButton());
	}

	@When("Enter the otp that is generated to the mobile number given")
	public void enter_the_otp_that_is_generated_to_the_mobile_number_given() throws InterruptedException {
		Thread.sleep(30000);
	}

	@Then("Click on continue button and user should be signed in")
	public void click_on_continue_button_and_user_should_be_signed_in() {
		
		signUpPage.clickElement(signUpPage.getContinueButton());
		Assert.assertTrue(homePage.getVisibleProfile().isDisplayed());
		Reporter.log("user is signed in", true);
	}

}
